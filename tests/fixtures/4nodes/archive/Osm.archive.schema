namespace osm {
struct Header
{
    coord_scale : i32 : 32;
    bbox_left : i32 : 32;
    bbox_right : i32 : 32;
    bbox_top : i32 : 32;
    bbox_bottom : i32 : 32;
    writingprogram_idx : u64 : 40;
    source_idx : u64 : 40;
    replication_timestamp : i64 : 64;
    replication_sequence_number : i64 : 64;
    replication_base_url_idx : u64 : 40;
}
}

namespace osm {
struct Node
{
    osm_id : i64 : 40;
    lat : i32 : 32;
    lon : i32 : 32;
    @range( tags )
    tag_first_idx : u64 : 40;
}
}

namespace osm {
struct HilbertNodePair
{
    i : u64 : 40;
    h : u64 : 64;
}
}

namespace osm {
struct Way
{
    osm_id : i64 : 40;
    h : u64 : 64;
    @range( tags )
    tag_first_idx : u64 : 40;
    @range( refs )
    ref_first_idx : u64 : 40;
}
}

namespace osm {
struct HilbertWayPair
{
    i : u32 : 32;
    h : u64 : 64;
}
}

namespace osm {
struct Relation
{
    osm_id : i64 : 40;
    h : u64 : 64;
    @range( tags )
    tag_first_idx : u64 : 40;
}
}

namespace osm {
struct HilbertRelationPair
{
    i : u32 : 32;
    h : u64 : 64;
}
}

namespace osm {
const u64 INVALID_IDX = 1099511627775;
}

namespace osm {
struct NodeMember
{
    @optional( .osm.INVALID_IDX )
    node_idx : u64 : 40;
    role_idx : u64 : 40;
}
}

namespace osm {
struct WayMember
{
    @optional( .osm.INVALID_IDX )
    way_idx : u64 : 40;
    role_idx : u64 : 40;
}
}

namespace osm {
struct RelationMember
{
    @optional( .osm.INVALID_IDX )
    relation_idx : u64 : 40;
    role_idx : u64 : 40;
}
}

namespace osm {
struct Tag
{
    key_idx : u64 : 40;
    value_idx : u64 : 40;
}
}

namespace osm {
struct TagIndex
{
    value : u64 : 40;
}
}

namespace osm {
struct NodeIndex
{
    @optional( .osm.INVALID_IDX )
    value : u64 : 40;
}
}

namespace osm {
struct Id
{
    value : u64 : 40;
}
}

namespace osm {
archive Ids
{
    nodes : vector< .osm.Id >;
    ways : vector< .osm.Id >;
    relations : vector< .osm.Id >;
}
}

namespace osm {
@bound_implicitly( Relations : .osm.Osm.relations, .osm.Osm.relation_members )
archive Osm
{
    @explicit_reference( .osm.Header.writingprogram_idx, .osm.Osm.stringtable )
    @explicit_reference( .osm.Header.source_idx, .osm.Osm.stringtable )
    @explicit_reference( .osm.Header.replication_base_url_idx, .osm.Osm.stringtable )
    header : .osm.Header;
    @explicit_reference( .osm.Node.tag_first_idx, .osm.Osm.tags_index )
    nodes : vector< .osm.Node >;
    @optional
    hilbert_node_pairs : vector< .osm.HilbertNodePair >;
    @explicit_reference( .osm.Way.tag_first_idx, .osm.Osm.tags_index )
    @explicit_reference( .osm.Way.ref_first_idx, .osm.Osm.nodes_index )
    ways : vector< .osm.Way >;
    @optional
    hilbert_way_pairs_not_used : vector< .osm.HilbertWayPair >;
    @explicit_reference( .osm.Relation.tag_first_idx, .osm.Osm.tags_index )
    relations : vector< .osm.Relation >;
    @optional
    hilbert_relation_pairs_not_used : vector< .osm.HilbertRelationPair >;
    @explicit_reference( .osm.NodeMember.node_idx, .osm.Osm.nodes )
    @explicit_reference( .osm.NodeMember.role_idx, .osm.Osm.stringtable )
    @explicit_reference( .osm.WayMember.way_idx, .osm.Osm.ways )
    @explicit_reference( .osm.WayMember.role_idx, .osm.Osm.stringtable )
    @explicit_reference( .osm.RelationMember.relation_idx, .osm.Osm.relations )
    @explicit_reference( .osm.RelationMember.role_idx, .osm.Osm.stringtable )
    relation_members : multivector< 40, .osm.NodeMember, .osm.WayMember, .osm.RelationMember >;
    @explicit_reference( .osm.Tag.key_idx, .osm.Osm.stringtable )
    @explicit_reference( .osm.Tag.value_idx, .osm.Osm.stringtable )
    tags : vector< .osm.Tag >;
    @explicit_reference( .osm.TagIndex.value, .osm.Osm.tags )
    tags_index : vector< .osm.TagIndex >;
    @explicit_reference( .osm.NodeIndex.value, .osm.Osm.nodes )
    nodes_index : vector< .osm.NodeIndex >;
    stringtable : raw_data;
    @optional
    ids : archive .osm.Ids;
}
}

